version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.12.0-jessie
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test
      - run: sudo apt-get update && sudo apt-get install -y gettext-base
      # fix https://discuss.circleci.com/t/failed-to-fetch-debian/29258/3
      # - run:
      #     name: update fix for debian /etc/apt/sources.list
      #     command: |
      #       sudo rm /etc/apt/sources.list
      #       echo "deb http://archive.debian.org/debian/ jessie-backports main" | sudo tee -a /etc/apt/sources.list
      #       echo "deb-src http://archive.debian.org/debian/ jessie-backports main" | sudo tee -a /etc/apt/sources.list
      #       echo "Acquire::Check-Valid-Until false;" | sudo tee -a /etc/apt/apt.conf.d/10-nocheckvalid
      #       echo 'Package: *\nPin: origin "archive.debian.org"\nPin-Priority: 500' | sudo tee -a /etc/apt/preferences.d/10-archive-pin
      #       sudo apt-get update && sudo apt-get install -y gettext-base
      - run: envsubst < ".env.ci" > ".env.production"
      - run: yarn build
      - persist_to_workspace:
          root: ./
          paths:
            - public
  deploy-prod:
    docker:
      - image: circleci/node:8.12.0-jessie
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: ls -l public
      - run:
          name: Install Firebase locally
          command: npm install --save-dev firebase-tools
      - run:
          name: Deploy Master to Firebase
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN  --only hosting
  e2e-tests:
    docker:
      # the Docker image with Cypress dependencies
      - image: cypress/base:8
        environment:
          ## this enables colors in the output
          TERM: xterm
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Running E2E tests
          command: npm run ci:e2e
      - store_test_results:
          path: e2e-results
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - e2e-tests:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-prod:
          requires:
            - e2e-tests
          filters:
            branches:
              only: master
